version: "3.9"

services:
  app:
    build:
      context: .
    restart: always
    env_file:
      - .env
    ports:
      - "9000:9000"
    volumes:
      - ./data/static:/vol/web/static
      - ./data/media:/vol/web/media
    environment:
      - DB_HOST=db
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASS=${DB_PASS}
      - SECRET_KEY=${DJANGO_SECRET_KEY}
      - ALLOWED_HOSTS=${DJANGO_ALLOWED_HOSTS}
      - FRONTEND_BASE_URL=${FRONTEND_BASE_URL}
    depends_on:
      - db
    networks:
      - monitoring
  db:
    image: postgres:15
    restart: always
    volumes:
      - postgres-data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASS}
    networks:
      - monitoring

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    restart: always
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    networks:
      - monitoring

  grafana:
    image: grafana/grafana
    container_name: grafana
    restart: always
    ports:
      - "3000:3000"
    environment:
      GF_SECURITY_ADMIN_PASSWORD: "admin" # 기본 관리자 패스워드 설정
    depends_on:
      - prometheus
    networks:
      - monitoring
    volumes:
      - grafana-storage:/var/lib/grafana
volumes:
  postgres-data:
  static-data:
  grafana-storage:
networks:
  monitoring:
    driver: bridge
